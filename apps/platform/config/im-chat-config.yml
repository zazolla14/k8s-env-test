apiVersion: v1
kind: ConfigMap
metadata:
  name: chat-config
  namespace: default
  annotations:
    # 防止被 Argo CD finalizers 意外删除 - 标记为共享资源
    argocd.argoproj.io/sync-options: Delete=false
    # 标记为平台级配置，由独立应用管理
    platform.akachat.io/shared-resource: "true"
data:
  discovery.yml: |
    enable: "etcd"
    kubernetes:
      namespace: default
    etcd:
      rootDirectory: akachat
      address: [ 'etcd-headless.component.svc.cluster.local:2379' ]
      username: ''
      password: ''

    rpcService:
      chat: chat-rpc-service
      admin: admin-rpc-service

  log.yml: |
    # Log storage path, default is acceptable, change to a full path if modification is needed
    storageLocation: /akachat/server/logs/
    # Log rotation period (in hours), default is acceptable
    rotationTime: 24
    # Number of log files to retain, default is acceptable
    remainRotationCount: 2
    # Log level settings: 3 for production environment; 6 for more verbose logging in debugging environments
    remainLogLevel: 6
    # Whether to output to standard output, default is acceptable
    isStdout: true
    # Whether to log in JSON format, default is acceptable
    isJson: false
    # output simplify log when KeyAndValues's value len is bigger than 50 in rpc method log
    isSimplify: true

  mongodb.yml: |
    uri: "mongodb://openIM:BnNv2Mkzu9ES@dds-d9j399ee00647e742.mongodb.ap-southeast-5.rds.aliyuncs.com:3717,dds-d9j399ee00647e741.mongodb.ap-southeast-5.rds.aliyuncs.com:3717/openim_v3?replicaSet=mgset-1107805239"
    # List of MongoDB server addresses
    address: ['dds-d9j399ee00647e742.mongodb.ap-southeast-5.rds.aliyuncs.com:3717','dds-d9j399ee00647e741.mongodb.ap-southeast-5.rds.aliyuncs.com:3717']
    replicaSet: mgset-1107805239
    database: openim_v3
      # Username for database authentication
    username: openIM
      # Password for database authentication
    password: BnNv2Mkzu9ES
      # Maximum number of connections in the connection pool
    maxPoolSize: 100
      # Maximum number of retry attempts for a failed database connection
    maxRetry: 10
      # Authentication source for database authentication, if use root user, set it to admin
     #documentPEM: /im-chat/global-bundle.pem
      # URI for database connection, leave empty if using address and credential settings directly
     #connectParam: tls=true&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false

  redis.yml: |
    address: ['r-d9jj3sgajitxtqb1h6.redis.ap-southeast-5.rds.aliyuncs.com:6379']
    username: 'default'
    password: '5YkuUQ7cAJ4CC622'
    clusterMode: false
    db: 0
    maxRetry: 10
    poolSize: 100
   # tls:
    #  enableTLS: true
    #  serverName: 'akachat-staging-el5e9i.serverless.apse1.cache.amazonaws.com'


  share.yml: |
    AkaIM:
      # OpenIM API address
      apiURL: http://im-api-service:10002
      # OpenIM secret key, must be consistent with OpenIM
      secret: sIpdsOSGLsCfeN5q093cWdI3t
      # OpenIM administrator userID, must be consistent with OpenIM
      adminUserID: imAdmin
    #mtl:
     # enableMTls: false
      #caCrt: "/im-chat/cert/ca.crt"
      #clientCrt: "/im-chat/cert/server.crt"
      #clientKey: "/im-chat/cert/server.key"
    chatAdmin:
       # Default username and password for the admin
      - "chatAdmin"

  chat-api-admin.yml: |
    api:
      # Listening IP; 0.0.0.0 means both internal and external IPs are listened to, default is recommended
      listenIP: 0.0.0.0
      # Listening ports; if multiple are configured, multiple instances will be launched
      ports: [ 10009 ]

  chat-rpc-admin.yml: |
    rpc:
      # The IP address where this RPC service registers itself; if left blank, it defaults to the internal network IP
      registerIP: ''
      # IP address that the RPC service listens on; setting to 0.0.0.0 listens on both internal and external IPs. If left blank, it automatically uses the internal network IP
      listenIP: 0.0.0.0
      # List of ports that the RPC service listens on; configuring multiple ports will launch multiple instances.
      ports: [ 30200 ]

    tokenPolicy:
      expire: 90

    secret: chat123
  chat-api-chat.yml: |
    api:
      # Listening IP; 0.0.0.0 means both internal and external IPs are listened to, default is recommended
      listenIP: 0.0.0.0
      # Listening ports; if multiple are configured, multiple instances will be launched
      ports: [ 10008 ]

  chat-rpc-chat.yml: |
    rpc:
      # The IP address where this RPC service registers itself; if left blank, it defaults to the internal network IP
      registerIP: ''
      # IP address that the RPC service listens on; setting to 0.0.0.0 listens on both internal and external IPs. If left blank, it automatically uses the internal network IP
      listenIP: 0.0.0.0
      # List of ports that the RPC service listens on; configuring multiple ports will launch multiple instances.
      ports: [ 30300 ]

    verifyCode:
      validTime: 300
      validCount: 5
      uintTime: 86400
      maxCount: 10
      superCode: "666666"
      len: 6
      phone:
        use: "enjoymov"
        enjoymov:
          endpoint: "https://enjoymov.co"
          messageChannel: "108_29"
          merchantID: "KSTB697657"
          md5Key:
          endpointYunpian: "https://sms.yunpian.com"
          accessKeySecretYunpian:
        ali:
          endpoint: ""
          accessKeyId: ""
          accessKeySecret: ""
          signName: ""
          verificationCodeTemplateCode: ""
        aws:
          endpoint: ""
          accessKeyId: "LTAI5tMjPXXgQazUx7BdVYcv"
          accessKeySecret: "G3tb5NGcZ1fHKNgnGsbPJ0B8sP72Po"
          signName: "akachat" # the "from"
          verificationCodeTemplateCode: ""
      mail:
        enable: true
        title: "Your Verification Code - Akachat"
        awsSESUsername: "AKIATAY7LWRABOFXA2EY"
        awsSESPassword: "BGY0OEtknRK7XzgVbcTOSEDVkmHSYIZzZkm4PB2iz3Yf"
        smtpAddr: "email-smtp.ap-southeast-1.amazonaws.com"
        smtpPort: 587
        senderMail: "noreply@inter-digital.org"

    liveKit:
      url: "wss://aka-5mhu60gu.livekit.cloud" # LIVEKIT_URL, LiveKit server address and port
      key:
      secret:

    allowRegister: true

  tracer.yml: |
    appName:
      chatApi: "chat-api"
      adminApi: "admin-api"
      chatRpc: "chat-rpc"
      adminRpc: "admin-rpc"
    otel:
      collector:
        address: "otel-collector.monitoring.svc.cluster.local:4317"
    enable: true