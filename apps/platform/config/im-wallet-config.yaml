apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-config
  namespace: default
  annotations:
    # 防止被 Argo CD finalizers 意外删除 - 标记为共享资源
    argocd.argoproj.io/sync-options: Delete=false
    # 标记为平台级配置，由独立应用管理
    platform.akachat.io/shared-resource: "true"
data:
  admin.yml: |
    tokenPolicy:
      expire: 90

    secret: chat123
  discovery.yml: |
    enable: "etcd"
    etcd:
      rootDirectory: akachat
      address: [ 'etcd-headless.component.svc.cluster.local:2379' ]
      username: ''
      password: ''

    kubernetes:
      namespace: aka-staging

    rpcService:
      wallet: wallet-rpc-service
      admin: admin-rpc-service
  kafka.yml: |
    username: ''

    password: ''

    producerAck: 

    compressType: none

    address: ['alikafka-pre-public-intl-sg-x1e4fhrwp04-1-vpc.alikafka.aliyuncs.com:9092',
              'alikafka-pre-public-intl-sg-x1e4fhrwp04-2-vpc.alikafka.aliyuncs.com:9092',
              'alikafka-pre-public-intl-sg-x1e4fhrwp04-3-vpc.alikafka.aliyuncs.com:9092']
    
    toExpiredTransferTopic: toExpiredTransfer

    toExpiredEnvelopeTopic: toExpiredEnvelope

    toExpiredTransferGroupID: expiredTransfer

    toExpiredEnvelopeGroupID: expiredEnvelope

    tls:
      enableTLS: false
      caCrt: /certs/amazon-ca.pem
      clientCrt: 
      clientKey: 
      clientKeyPwd: 
      insecureSkipVerify: false
  log.yml: |
    # Log storage path, default is acceptable, change to a full path if
    storageLocation: '/akachat/server/logs/'

    # Log rotation period (in hours), default is acceptable

    rotationTime: 24

    # Number of log files to retain, default is acceptable

    remainRotationCount: 2

    # Log level settings: 3 for production environment; 6 for more verbose
    #logging in debugging environments

    remainLogLevel: 6

    # Whether to output to standard output, default is acceptable

    isStdout: true

    # Whether to log in JSON format, default is acceptable

    isJson: false
    # output simplify log when KeyAndValues's value len is bigger than 50 in rpc
    # method log
    isSimplify: true
  msgtransfer.yml: |
    prometheus:
      enable: true
      autoSetPorts: true
      ports: [ 19020 ]
  mysqldb.yml: |
    # URI for database connection, leave empty if using address and credential settings directly
    uri: "imWallet:1mW4lle3tStag2025@tcp(rm-d9jsd89edn3459ce2.mysql.ap-southeast-5.rds.aliyuncs.com:3306)/aka_wallets?charset=utf8mb4&parseTime=True&loc=Local"
    # Hostname or IP address of PostgreSQL server
    host: rm-d9jsd89edn3459ce2.mysql.ap-southeast-5.rds.aliyuncs.com
    # Port of PostgreSQL server
    port: 3306
    # Name of the database
    database: aka_wallets
    # Username for database authentication
    username: imWallet
    # Password for database authentication
    password: 1mW4lle3tStag2025
    # SSL mode (disable, require, verify-ca, verify-full)
    sslmode: disable
    # Maximum number of open connections in the pool
    maxOpenConns: 300
    # Maximum number of idle connections in the pool
    maxIdleConns: 30
    # Maximum number of retry attempts for a failed database connection
    maxRetry: 10
    # Connection timeout in seconds
    connectTimeout: 5
  postgresdb.yml: |
    # URI for database connection, leave empty if using address and credential
    #settings directly

    uri: ""

    # Hostname or IP address of PostgreSQL server

    host: localhost

    # Port of PostgreSQL server

    port: 5432

    # Name of the database

    database: openim_v3

    # Username for database authentication

    username: root

    # Password for database authentication

    password: openIM123

    # SSL mode (disable, require, verify-ca, verify-full)

    sslmode: disable

    # Maximum number of open connections in the pool

    maxOpenConns: 100

    # Maximum number of idle connections in the pool

    maxIdleConns: 10

    # Maximum number of retry attempts for a failed database connection

    maxRetry: 10

    # Connection timeout in seconds

    connectTimeout: 5
  publisher.yml: |
    prometheus:
      enable: true
      autoSetPorts: true
      ports: [ 19023 ]
  redis.yml: |
    address: ['r-d9jj3sgajitxtqb1h6.redis.ap-southeast-5.rds.aliyuncs.com:6379']
    username: 'default'
    password: '5YkuUQ7cAJ4CC622'
    clusterMode: false
    db: 0
    maxRetry: 10
    poolSize: 100

    tls:
      enableTLS: false
      serverName: "akachat-cache-valkey-serverless-el5e9i.serverless.apse1.cache.amazonaws.com"
  share.yml: |
    openIM:
      # OpenIM API address
      apiURL: http://im-api-service.default.svc.cluster.local:10002
      # OpenIM secret key, must be consistent with OpenIM
      secret: openIM123
      # OpenIM administrator userID, must be consistent with OpenIM
      adminUserID: imAdmin
    walletAdmin:
      # Default username and password for the admin
      - "walletAdmin"
    dbOption: mysql
  wallet-api-wallet.yml: |
    api:
      # Listening IP; 0.0.0.0 means both internal and external IPs are listened to, default is recommended
      listenIP: 0.0.0.0
      # Listening ports; if multiple are configured, multiple instances will be launched
      ports: [ 10011 ]
      # API compression level; 0: default compression, 1: best compression, 2: best speed, -1: no compression
      compressionLevel: 0

    prometheus:
      enable: false
      autoSetPorts: true
      ports: [ 13002 ]
      grafanaURL: https://grafana.0dev.cc/

  tracer.yml: |
    appName:
      api: "wallet-api"
    otel:
      collector:
        address: "otel-collector.monitoring.svc.cluster.local:4317"
    enable: true