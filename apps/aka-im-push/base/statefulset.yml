apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: im-push
  labels:
    app: im-push
    service: im-push-service
spec:
  serviceName: im-push-service
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      app: im-push
  template:
    metadata:
      labels:
        app: im-push
        service: im-push-service
    spec:
      imagePullSecrets:
        - name: dockerhub-secret
      initContainers:
        - name: init-copy-config
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /config && \
              cp /src/* /config/ && \
              cp /secret/firebase_account_service.json /config/
          volumeMounts:
            - name: server-config
              mountPath: /config
            - name: configmap-config
              mountPath: /src
            - name: general-cert
              mountPath: /secret
      containers:
        - name: im-push
          image:  akachat/server
          imagePullPolicy: Always

          env:
            - name: DEBUG_MODE
              value: "true"
            - name: CONFIG_PATH
              value: "/config"
            - name: IMENV_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
            - name: IMENV_KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: openim-kafka-secret
                  key: kafka-password
          volumeMounts:
            - name: server-config
              mountPath: "/config"
              readOnly: true
            - name: srv-log
              mountPath:  "/akachat/server/logs"
          ports:
            - name: grpc
              containerPort: 10170
            - name: prometheus
              containerPort: 12170
            - name: debug
              containerPort: 2345
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
          livenessProbe:
            tcpSocket:
              port: 10170
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            tcpSocket:
              port: 10170
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: server-config
          emptyDir: {}
        - name: configmap-config
          configMap:
            name: server-config
        - name: general-cert
          secret:
            secretName: general-cert
        - name: srv-log
          persistentVolumeClaim:
            claimName: cnfs-nas-pvc
